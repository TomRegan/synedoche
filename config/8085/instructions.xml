<?xml version="1.0" encoding="utf-8"?>
<!--author        : Tom Regan <thomas.c.regan@gmail.com>
    file          : instructions.xml
    since         : 2011-08-07
    last modified : 2011-08-17
-->

<instructions language="8085" size="0x08" api="sunray">

  <!--Instruction formats are those described at:
      http://www.cavehill.uwi.edu/fpas/cmp/online/el21c/lesson18.html
  -->
  <!--Formats match 8085A addressing modes:
       IP : Implied Addressing
       R. : Register Addressing
            S : bits 5..7 are data
            D : bits 2..4 are data
       IM : Immediate Addressing
       D  : Direct Addressing
       RI : Register Indirect Addressing
       C  : Combined Addressing Modes

       Varients exist, since 8085 is a pretty irregular ISA.
  -->
  <formats>
    <format type="RS"  size="0x8"  fetch="0x1"><!--Register Addressing-->
      <field name="op"  start="0x00" end="0x04" />
      <field name="s"   start="0x05" end="0x07" />
    </format>

    <format type="RDS" size="0x8"  fetch="0x1"><!--Register Addressing-->
      <field name="op"  start="0x00" end="0x01" />
      <field name="d"   start="0x02" end="0x04" />
      <field name="s"   start="0x05" end="0x07" />
    </format>

    <format type="RI" size="0x8"  fetch="0x1"><!--Register Indirect-->
      <field name="op" start="0x00" end="0x07" />
    </format>

    <format type="IM"  size="0x10" fetch="0x2"><!--Immediate Addressing-->
      <field name="op"   start="0x00" end="0x07" />
      <field name="data" start="0x08" end="0x0f" />
    </format>

    <format type="ID"  size="0x10" fetch="0x2"><!--Immediate Addressing-->
      <field name="op"   start="0x00" end="0x01" />
      <field name="d"    start="0x02" end="0x04" />
      <field name="s"    start="0x05" end="0x07" />
      <field name="data" start="0x08" end="0x0f" />
    </format>

    <format type="ID16" size="0x18" fetch="0x3"><!--Immediate Addressing-->
      <field name="op"      start="0x00" end="0x07" />
      <field name="data_0B" start="0x08" end="0x0f" />
      <field name="data_1B" start="0x10" end="0x17" />
    </format>
  </formats>

  <assembler>
    <!--not currently in use-->
    <directives>
      <directive name=".text"   profile="text" />
      <directive name=".globl"  profile="global" />
      <directive name=".align"  profile="alignment" />
      <directive name=".asciiz" profile="string" />
    </directives>
    <syntax>
      <label     pattern="\w+:" />
      <reference pattern="(\w+):" />
      <comment   pattern=";.*" />
      <hex       pattern="H" />
    </syntax>
  </assembler>

  <instruction name="ADD" format="RS"><!--add to accumilator-->
    <!--Adds a specified register to A(ccumulator)-->
    <signature>
      <field name="op" />
    </signature>
    <fields>
      <field name="op"  value="0x10" />
    </fields>
    <syntax>
      <expression pattern="\w+\s+(\w+)" />
      <symbol type="register" matches="s" />
    </syntax>
    <implementation>
      <method name="addRegisters" args="0x00 s 0x00" />
      <method name="setBitInRegister" args="0x1 0x4 0x1" />
    </implementation>
  </instruction>

  <instruction name="ADI" format="IM"><!--add immediate-->
    <!--Adds a given value to A-->
    <signature>
      <field name="op" />
    </signature>
    <fields>
      <field name="op" value="0xc6" />
    </fields>
    <syntax>
      <expression pattern="\w+\s+(\d+H?)" />
      <symbol type="immediate" matches="data" />
    </syntax>
    <implementation>
      <method name="addImmediate" args="0x00 0x00 data" />
    </implementation>
  </instruction>

  <instruction name="CPI" format="IM"><!--compare immediate-->
    <!--Adds a given value to A-->
    <signature>
      <field name="op" />
    </signature>
    <fields>
      <field name="op" value="0xfe" />
    </fields>
    <syntax>
      <expression pattern="\w+\s+(\d+H?)" />
      <symbol type="immediate" matches="data" />
    </syntax>
    <implementation>
      <!--set carry to 0 if greater or equal-->
      <method name="testGreaterOrEqualImmediate" args="0x00 data" />
      <method name="setBitInRegister"  args="0x1 0x7 0x0" />
      <!--set carry to 1 if less-->
      <method name="testLessImmediate" args="0x0 data" />
      <method name="setBitInRegister"  args="0x1 0x7 0x1" />
      <!--set zero to 0 if not equal-->
      <method name="testNotEqualImmediate"      args="0x00 data" />
      <method name="setBitInRegister"  args="0x1 0x2 0x0" />
      <!--set zero to 1 if equal-->
      <method name="testEqualImmediate"         args="0x00 data" />
      <method name="setBitInRegister"  args="0x1 0x2 0x1" />
    </implementation>
  </instruction>

  <instruction name="JC" format="ID16"><!--Jump on Carry-->
    <!--Executes a jump if carry status is > 1-->
    <signature>
      <field name="op" />
    </signature>
    <fields>
      <field name="op"  value="0xda" />
    </fields>
    <syntax>
      <expression pattern="\w+\s+(\w+)" />
      <symbol type="immediate" matches="data_1b" />
    </syntax>
    <implementation>
      <method name="copyRegister" args="d s" />
    </implementation>
    <replacements>
      <replacement name="data_1b" group="0x1" type="relative" />
    </replacements>
  </instruction>

  <instruction name="MOV" format="RDS"><!--move register to register-->
    <!--Copies the value from one register to another-->
    <signature>
      <field name="op" />
    </signature>
    <fields>
      <field name="op"  value="0x01" />
    </fields>
    <syntax>
      <expression pattern="\w+\s+(\w+),\s*(\w+)" />
      <symbol type="register" matches="d" />
      <symbol type="register" matches="s" />
    </syntax>
    <implementation>
      <method name="copyRegister" args="d s" />
    </implementation>
  </instruction>

  <instruction name="MVI" format="ID"><!--move immediate to register-->
    <!--Loads an immediate value into a register-->
    <signature>
      <field name="op" />
      <field name="s" />
    </signature>
    <fields>
      <field name="op"  value="0x00" />
      <field name="s"   value="0x06" />
    </fields>
    <syntax>
      <expression pattern="\w+\s+(\w+),\s*(\w+)[Hh]?" />
      <symbol type="register"  matches="d" />
      <symbol type="immediate" matches="data" />
    </syntax>
    <implementation>
      <method name="setRegister" args="d data" />
    </implementation>
  </instruction>

  <instruction name="NOP" format="RI">
    <signature>
      <field name="op" />
    </signature>
    <fields>
      <field name="op" value="0x00" />
    </fields>
    <syntax>
      <expression pattern="\w+" />
    </syntax>
    <implementation>
      <method name="doNothing" args="" />
    </implementation>
  </instruction>

  <instruction name="HLT" format="RI">
    <signature>
      <field name="op" />
    </signature>
    <fields>
      <field name="op" value="0x76" />
    </fields>
    <syntax>
      <expression pattern="\w+" />
    </syntax>
    <implementation>
      <method name="systemCall" args="DIR0a" />
    </implementation>
  </instruction>
</instructions>
